{"ast":null,"code":"var _jsxFileName = \"/mnt/hd1tb/develop/cursos/fullstacklab20/mydailystatus/pages/app.js\";\nvar __jsx = React.createElement;\nimport React, { useEffect } from 'react';\nimport auth0 from '../lib/auth0';\nimport router from 'next/router';\nimport { db } from '../lib/db';\nimport { distance } from '../lib/geo';\n\nconst App = props => {\n  useEffect(() => {\n    if (!props.isAuth) {\n      router.push('/');\n    } else if (props.forceCreate) {\n      router.push('/create-status');\n    }\n  });\n  if (!props.isAuth) return null;\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }\n  }, __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }\n  }, \"Estado das Pessoas pr\\xF3ximas de Voc\\xEA\"), __jsx(\"table\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }\n  }, props.checkins.map(checkin => {\n    return __jsx(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 25\n      }\n    }, __jsx(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 29\n      }\n    }, checkin.id === props.user.sub && 'Você'), __jsx(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 29\n      }\n    }, checkin.status), __jsx(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 29\n      }\n    }, JSON.stringify(checkin.coords)), __jsx(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 29\n      }\n    }, checkin.distance, \" km\"));\n  })));\n};\n\nexport default App;\nexport async function getServerSideProps({\n  req,\n  res\n}) {\n  const session = await auth0.getSession(req);\n\n  if (session) {\n    const today = new Date();\n    const currentDate = today.getFullYear() + '-' + today.getMonth() + '-' + today.getDate();\n    const todayCheckin = await db.collection('markers').doc(currentDate).collection('checks').doc(session.user.sub).get();\n    const todayData = todayCheckin.data();\n    const checkinsList = [];\n    let forceCreate = true;\n\n    if (todayData) {\n      forceCreate = false;\n      const checkins = await db.collection('markers').doc(currentDate).collection('checks').near({\n        center: todayData.coordinates,\n        radius: 1000\n      }).get();\n      checkins.docs.forEach(doc => {\n        checkinsList.push({\n          id: doc.id,\n          status: doc.data().status,\n          coords: {\n            lat: doc.data().coordinates.latitude,\n            long: doc.data().coordinates.longitude\n          },\n          distance: distance(todayData.coordinates.latitude, todayData.coordinates.longitude, doc.data().coordinates.latitude, doc.data().coordinates.longitude).toFixed(3)\n        });\n      });\n    }\n\n    return {\n      props: {\n        isAuth: true,\n        user: session.user,\n        forceCreate,\n        checkins: checkinsList\n      }\n    };\n  }\n\n  return {\n    props: {\n      isAuth: false,\n      user: {}\n    }\n  };\n}","map":{"version":3,"sources":["/mnt/hd1tb/develop/cursos/fullstacklab20/mydailystatus/pages/app.js"],"names":["React","useEffect","auth0","router","db","distance","App","props","isAuth","push","forceCreate","checkins","map","checkin","id","user","sub","status","JSON","stringify","coords","getServerSideProps","req","res","session","getSession","today","Date","currentDate","getFullYear","getMonth","getDate","todayCheckin","collection","doc","get","todayData","data","checkinsList","near","center","coordinates","radius","docs","forEach","lat","latitude","long","longitude","toFixed"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react'\nimport auth0 from '../lib/auth0'\nimport router from 'next/router'\nimport { db } from '../lib/db'\nimport { distance } from '../lib/geo'\n\nconst App = (props) => {\n    useEffect(() => {\n        if ( !props.isAuth ) {\n            router.push('/')\n        } else if ( props.forceCreate ) {\n            router.push('/create-status')\n        }\n    })\n    if ( !props.isAuth ) return null\n    return (\n        <div>\n            <h1>Estado das Pessoas próximas de Você</h1>\n            <table>\n                {props.checkins.map(checkin => {\n                    return (\n                        <tr>\n                            <td>{checkin.id === props.user.sub && 'Você' }</td>\n                            <td>{checkin.status}</td>\n                            <td>{JSON.stringify(checkin.coords)}</td>\n                            <td>{checkin.distance} km</td>\n                        </tr>\n                    )\n                })}\n            </table>\n        </div>\n    )\n}\n\nexport default App\n\nexport async function getServerSideProps({ req, res }){\n    const session = await auth0.getSession(req)\n\n    if ( session ) {\n\n        const today = new Date()\n        const currentDate = today.getFullYear() + '-' + today.getMonth() + '-' + today.getDate()\n        const todayCheckin = await db\n            .collection('markers')\n            .doc(currentDate)\n            .collection('checks')\n            .doc(session.user.sub)\n            .get()\n        const todayData = todayCheckin.data()\n        const checkinsList = []\n        let forceCreate = true\n\n        if ( todayData ) {\n            forceCreate = false\n            const checkins = await db\n            .collection('markers')\n            .doc(currentDate)\n            .collection('checks')\n            .near({\n                center: todayData.coordinates,\n                radius: 1000\n            })\n            .get()\n            checkins.docs.forEach(doc => {\n                checkinsList.push({\n                    id: doc.id,\n                    status: doc.data().status,\n                    coords: {\n                        lat: doc.data().coordinates.latitude,\n                        long: doc.data().coordinates.longitude\n                    },\n                    distance: distance(\n                        todayData.coordinates.latitude,\n                        todayData.coordinates.longitude,\n                        doc.data().coordinates.latitude,\n                        doc.data().coordinates.longitude\n                    ).toFixed(3)\n                })\n            })\n        }\n\n        return {\n            props: {\n                isAuth: true,\n                user: session.user,\n                forceCreate,\n                checkins: checkinsList\n            }\n        }\n    }\n\n    return {\n        props: {\n            isAuth: false,\n            user: {}\n        }\n    }\n}\n"]},"metadata":{},"sourceType":"module"}