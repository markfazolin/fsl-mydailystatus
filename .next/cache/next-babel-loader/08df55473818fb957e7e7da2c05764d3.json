{"ast":null,"code":"var _jsxFileName = \"/mnt/hd1tb/develop/cursos/fullstacklab20/mydailystatus/pages/app.js\";\nvar __jsx = React.createElement;\nimport React, { useEffect } from 'react';\nimport auth0 from '../lib/auth0';\nimport router from 'next/router';\nimport { db } from '../lib/db';\n\nconst App = props => {\n  useEffect(() => {\n    if (!props.isAuth) {\n      router.push('/');\n    } else if (props.forceCreate) {\n      router.push('/create-status');\n    }\n  });\n  if (!props.isAuth) return null;\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }\n  }, __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }\n  }, \"App\"), __jsx(\"pre\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }\n  }, JSON.stringify(props, null, 2)));\n};\n\nexport default App;\nexport async function getServerSideProps({\n  req,\n  res\n}) {\n  const session = await auth0.getSession(req);\n\n  if (session) {\n    const today = new Date();\n    const currentDate = today.getFullYear() + '-' + today.getMonth() + '-' + today.getDate();\n    const todayCheckin = await db.collection('markers').doc(currentDate).collection('checks').doc(session.user.sub).get();\n    const todayData = todayCheckin.data();\n    const checkinsList = [];\n    let forceCreate = true;\n\n    if (todayData) {\n      forceCreate = false;\n      const checkins = await db.collection('markers').doc(currentDate).collection('checks').near({\n        center: todayData.coordinates,\n        radius: 1000\n      }).get();\n      checkins.docs.forEach(doc => {\n        checkinsList.push({\n          id: doc.id,\n          status: doc.data().status,\n          coords: {\n            lat: doc.data().coordinates.lat,\n            long: doc.data().coordinates.long\n          }\n        });\n      });\n    }\n\n    return {\n      props: {\n        isAuth: true,\n        user: session.user,\n        forceCreate,\n        checkins: checkinsList\n      }\n    };\n  }\n\n  return {\n    props: {\n      isAuth: false,\n      user: {}\n    }\n  };\n}","map":{"version":3,"sources":["/mnt/hd1tb/develop/cursos/fullstacklab20/mydailystatus/pages/app.js"],"names":["React","useEffect","auth0","router","db","App","props","isAuth","push","forceCreate","JSON","stringify","getServerSideProps","req","res","session","getSession","today","Date","currentDate","getFullYear","getMonth","getDate","todayCheckin","collection","doc","user","sub","get","todayData","data","checkinsList","checkins","near","center","coordinates","radius","docs","forEach","id","status","coords","lat","long"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react'\nimport auth0 from '../lib/auth0'\nimport router from 'next/router'\nimport { db } from '../lib/db'\n\nconst App = (props) => {\n    useEffect(() => {\n        if ( !props.isAuth ) {\n            router.push('/')\n        } else if ( props.forceCreate ) {\n            router.push('/create-status')\n        }\n    })\n    if ( !props.isAuth ) return null\n    return (\n        <div>\n            <h1>App</h1>\n            <pre>{JSON.stringify(props, null, 2)}</pre>\n        </div>\n    )\n}\n\nexport default App\n\nexport async function getServerSideProps({ req, res }){\n    const session = await auth0.getSession(req)\n\n    if ( session ) {\n\n        const today = new Date()\n        const currentDate = today.getFullYear() + '-' + today.getMonth() + '-' + today.getDate()\n        const todayCheckin = await db\n            .collection('markers')\n            .doc(currentDate)\n            .collection('checks')\n            .doc(session.user.sub)\n            .get()\n        const todayData = todayCheckin.data()\n        const checkinsList = []\n        let forceCreate = true\n\n        if ( todayData ) {\n            forceCreate = false\n            const checkins = await db\n            .collection('markers')\n            .doc(currentDate)\n            .collection('checks')\n            .near({\n                center: todayData.coordinates,\n                radius: 1000\n            })\n            .get()\n            checkins.docs.forEach(doc => {\n                checkinsList.push({\n                    id: doc.id,\n                    status: doc.data().status,\n                    coords: {\n                        lat: doc.data().coordinates.lat,\n                        long: doc.data().coordinates.long\n                    }\n                })\n            })\n        }\n\n        return {\n            props: {\n                isAuth: true,\n                user: session.user,\n                forceCreate,\n                checkins: checkinsList\n            }\n        }\n    }\n\n    return {\n        props: {\n            isAuth: false,\n            user: {}\n        }\n    }\n}\n"]},"metadata":{},"sourceType":"module"}