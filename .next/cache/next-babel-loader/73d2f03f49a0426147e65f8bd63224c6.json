{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/mnt/hd1tb/develop/cursos/fullstacklab20/mydailystatus/pages/app.js\";\n\nvar __jsx = React.createElement;\nimport React, { useEffect } from 'react';\nimport router from 'next/router';\n\nvar App = function App(props) {\n  useEffect(function () {\n    if (!props.isAuth) {\n      router.push('/');\n    } else if (props.forceCreate) {\n      router.push('/create-status');\n    }\n  });\n  if (!props.isAuth) return null;\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }\n  }, __jsx(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }\n  }, \"App\"), __jsx(\"pre\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }\n  }, JSON.stringify(props, null, 2)));\n};\n\nexport var __N_SSP = true;\nexport default App;","map":{"version":3,"sources":["/mnt/hd1tb/develop/cursos/fullstacklab20/mydailystatus/pages/app.js"],"names":["React","useEffect","router","App","props","isAuth","push","forceCreate","JSON","stringify"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,OAAOC,MAAP,MAAmB,aAAnB;;AAGA,IAAMC,GAAG,GAAG,SAANA,GAAM,CAACC,KAAD,EAAW;AACnBH,EAAAA,SAAS,CAAC,YAAM;AACZ,QAAK,CAACG,KAAK,CAACC,MAAZ,EAAqB;AACjBH,MAAAA,MAAM,CAACI,IAAP,CAAY,GAAZ;AACH,KAFD,MAEO,IAAKF,KAAK,CAACG,WAAX,EAAyB;AAC5BL,MAAAA,MAAM,CAACI,IAAP,CAAY,gBAAZ;AACH;AACJ,GANQ,CAAT;AAOA,MAAK,CAACF,KAAK,CAACC,MAAZ,EAAqB,OAAO,IAAP;AACrB,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMG,IAAI,CAACC,SAAL,CAAeL,KAAf,EAAsB,IAAtB,EAA4B,CAA5B,CAAN,CAFJ,CADJ;AAMH,CAfD;;;AAiBA,eAAeD,GAAf","sourcesContent":["import React, { useEffect } from 'react'\nimport auth0 from '../lib/auth0'\nimport router from 'next/router'\nimport { db } from '../lib/db'\n\nconst App = (props) => {\n    useEffect(() => {\n        if ( !props.isAuth ) {\n            router.push('/')\n        } else if ( props.forceCreate ) {\n            router.push('/create-status')\n        }\n    })\n    if ( !props.isAuth ) return null\n    return (\n        <div>\n            <h1>App</h1>\n            <pre>{JSON.stringify(props, null, 2)}</pre>\n        </div>\n    )\n}\n\nexport default App\n\nexport async function getServerSideProps({ req, res }){\n    const session = await auth0.getSession(req)\n\n    if ( session ) {\n\n        const today = new Date()\n        const currentDate = today.getFullYear() + '-' + today.getMonth() + '-' + today.getDate()\n        const todayCheckin = await db\n            .collection('markers')\n            .doc(currentDate)\n            .collection('checks')\n            .doc(session.user.sub)\n            .get()\n        const todayData = todayCheckin.data()\n        let forceCreate = true\n\n        if ( todayData ) {\n            forceCreate = false\n            const checkins = await db\n            .collection('markers')\n            .doc(currentDate)\n            .collection('checks')\n            .near({\n                center: todayData.coordinates,\n                radius: 1000\n            })\n            .get()\n            const checkinsList = []\n            checkins.docs.forEach(doc => {\n                checkinsList.push({\n                    ...doc.data(),\n                    id: doc.id\n                })\n            })\n        }\n\n        return {\n            props: {\n                isAuth: true,\n                user: session.user,\n                forceCreate\n            }\n        }\n    }\n    return {\n        props: {\n            isAuth: false,\n            user: {}\n        }\n    }\n}\n"]},"metadata":{},"sourceType":"module"}