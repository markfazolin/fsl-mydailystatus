{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useEffect } from 'react';\nimport auth0 from '../lib/auth0';\nimport router from 'next/router';\nimport { db } from '../lib/db';\nimport { distance } from '../lib/geo';\n\nconst App = props => {\n  useEffect(() => {\n    if (!props.isAuth) {\n      router.push('/');\n    } else if (props.forceCreate) {\n      router.push('/create-status');\n    }\n  });\n  if (!props.isAuth) return null;\n  return __jsx(\"div\", null, __jsx(\"h1\", null, \"Estado das Pessoas pr\\xF3ximas de Voc\\xEA\"), __jsx(\"table\", null, props.checkins.map(checkin => {\n    return __jsx(\"tr\", null, __jsx(\"td\", null, checkin.id === props.user.sub && 'VocÃª'), __jsx(\"td\", null, checkin.status), __jsx(\"td\", null, JSON.stringify(checkin.coords)), __jsx(\"td\", null, checkin.distance, \" km\"));\n  })));\n};\n\nexport default App;\nexport async function getServerSideProps({\n  req,\n  res\n}) {\n  const session = await auth0.getSession(req);\n\n  if (session) {\n    const today = new Date();\n    const currentDate = today.getFullYear() + '-' + today.getMonth() + '-' + today.getDate();\n    const todayCheckin = await db.collection('markers').doc(currentDate).collection('checks').doc(session.user.sub).get();\n    const todayData = todayCheckin.data();\n    const checkinsList = [];\n    let forceCreate = true;\n\n    if (todayData) {\n      forceCreate = false;\n      const checkins = await db.collection('markers').doc(currentDate).collection('checks').near({\n        center: todayData.coordinates,\n        radius: 1000\n      }).get();\n      checkins.docs.forEach(doc => {\n        checkinsList.push({\n          id: doc.id,\n          status: doc.data().status,\n          coords: {\n            lat: doc.data().coordinates.latitude,\n            long: doc.data().coordinates.longitude\n          },\n          distance: distance(todayData.coordinates.latitude, todayData.coordinates.longitude, doc.data().coordinates.latitude, doc.data().coordinates.longitude).toFixed(3)\n        });\n      });\n    }\n\n    return {\n      props: {\n        isAuth: true,\n        user: session.user,\n        forceCreate,\n        checkins: checkinsList\n      }\n    };\n  }\n\n  return {\n    props: {\n      isAuth: false,\n      user: {}\n    }\n  };\n}","map":null,"metadata":{},"sourceType":"module"}