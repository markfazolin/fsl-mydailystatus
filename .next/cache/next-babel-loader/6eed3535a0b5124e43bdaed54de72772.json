{"ast":null,"code":"var _jsxFileName = \"/mnt/hd1tb/develop/cursos/fullstacklab20/mydailystatus/pages/app.js\";\nvar __jsx = React.createElement;\nimport React, { useEffect } from 'react';\nimport auth0 from '../lib/auth0';\nimport router from 'next/router';\nimport { db } from '../lib/db';\n\nconst App = props => {\n  useEffect(() => {\n    if (!props.isAuth) router.push('/');\n  });\n  if (!props.isAuth) return null;\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }\n  }, __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }\n  }, \"App\"), __jsx(\"pre\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }\n  }, JSON.stringify(props, null, 2)));\n};\n\nexport default App;\nexport async function getServerSideProps({\n  req,\n  res\n}) {\n  const session = await auth0.getSession(req);\n\n  if (session) {\n    const todayCheckin = await db.collection('markers').doc('2020-04-10').collection('checks').doc(session.user.sub).get();\n    const todayData = todayCheckin.data();\n    const forceCreate = true;\n    if (todayData) forceCreate = false;\n    return {\n      props: {\n        isAuth: true,\n        user: session.user,\n        forceCreate\n      }\n    };\n  }\n\n  return {\n    props: {\n      isAuth: false,\n      user: {}\n    }\n  };\n}","map":{"version":3,"sources":["/mnt/hd1tb/develop/cursos/fullstacklab20/mydailystatus/pages/app.js"],"names":["React","useEffect","auth0","router","db","App","props","isAuth","push","JSON","stringify","getServerSideProps","req","res","session","getSession","todayCheckin","collection","doc","user","sub","get","todayData","data","forceCreate"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,cAAlB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,SAASC,EAAT,QAAmB,WAAnB;;AAEA,MAAMC,GAAG,GAAIC,KAAD,IAAW;AACnBL,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAK,CAACK,KAAK,CAACC,MAAZ,EAAqBJ,MAAM,CAACK,IAAP,CAAY,GAAZ;AACxB,GAFQ,CAAT;AAGA,MAAK,CAACF,KAAK,CAACC,MAAZ,EAAqB,OAAO,IAAP;AACrB,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAME,IAAI,CAACC,SAAL,CAAeJ,KAAf,EAAsB,IAAtB,EAA4B,CAA5B,CAAN,CAFJ,CADJ;AAMH,CAXD;;AAaA,eAAeD,GAAf;AAEA,OAAO,eAAeM,kBAAf,CAAkC;AAAEC,EAAAA,GAAF;AAAOC,EAAAA;AAAP,CAAlC,EAA+C;AAClD,QAAMC,OAAO,GAAG,MAAMZ,KAAK,CAACa,UAAN,CAAiBH,GAAjB,CAAtB;;AACA,MAAKE,OAAL,EAAe;AAEX,UAAME,YAAY,GAAG,MAAMZ,EAAE,CACxBa,UADsB,CACX,SADW,EAEtBC,GAFsB,CAElB,YAFkB,EAGtBD,UAHsB,CAGX,QAHW,EAItBC,GAJsB,CAIlBJ,OAAO,CAACK,IAAR,CAAaC,GAJK,EAKtBC,GALsB,EAA3B;AAMA,UAAMC,SAAS,GAAGN,YAAY,CAACO,IAAb,EAAlB;AACA,UAAMC,WAAW,GAAG,IAApB;AAEA,QAAKF,SAAL,EAAiBE,WAAW,GAAG,KAAd;AAEjB,WAAO;AACHlB,MAAAA,KAAK,EAAE;AACHC,QAAAA,MAAM,EAAE,IADL;AAEHY,QAAAA,IAAI,EAAEL,OAAO,CAACK,IAFX;AAGHK,QAAAA;AAHG;AADJ,KAAP;AAOH;;AACD,SAAO;AACHlB,IAAAA,KAAK,EAAE;AACHC,MAAAA,MAAM,EAAE,KADL;AAEHY,MAAAA,IAAI,EAAE;AAFH;AADJ,GAAP;AAMH","sourcesContent":["import React, { useEffect } from 'react'\nimport auth0 from '../lib/auth0'\nimport router from 'next/router'\nimport { db } from '../lib/db'\n\nconst App = (props) => {\n    useEffect(() => {\n        if ( !props.isAuth ) router.push('/')\n    })\n    if ( !props.isAuth ) return null\n    return (\n        <div>\n            <h1>App</h1>\n            <pre>{JSON.stringify(props, null, 2)}</pre>\n        </div>\n    )\n}\n\nexport default App\n\nexport async function getServerSideProps({ req, res }){\n    const session = await auth0.getSession(req)\n    if ( session ) {\n\n        const todayCheckin = await db\n            .collection('markers')\n            .doc('2020-04-10')\n            .collection('checks')\n            .doc(session.user.sub)\n            .get()\n        const todayData = todayCheckin.data()\n        const forceCreate = true\n\n        if ( todayData ) forceCreate = false\n\n        return {\n            props: {\n                isAuth: true,\n                user: session.user,\n                forceCreate\n            }\n        }\n    }\n    return {\n        props: {\n            isAuth: false,\n            user: {}\n        }\n    }\n}\n"]},"metadata":{},"sourceType":"module"}